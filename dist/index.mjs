import v from"fs";var P={allReplace:!1,unitToConvert:"px",viewportWidth:750,unitPrecision:5,viewportUnit:"vw",fontViewportUnit:"vw",minPixelValue:1};function S(e,i){let f=Math.pow(10,i+1),a=Math.floor(e*f);return Math.round(a/10)*10/f}function w(e,i,f,a){return function(r,y){if(y=Number(y),!y)return r;let n=parseFloat(y);return n<=i?r:S(n/e*100,f)+a}}var b=P,h=/<template>([\s\S]+)<\/template>/gi,p=/(\d+)px/g,m=/style\s*(:|=)\s*(?:"([^"]*?)"|'([^']*?)'|{([^}]*)})/g,R=/(\w+)=\s*(?:"([^"]*?)"|'([^']*?)'|{([^}]*)})/g,V=/style.setProperty\(.*\)/g;function j(e=P){let i=Object.assign({},P);e=Object.assign(i,e);try{v.writeFileSync(__dirname+"/file.json",JSON.stringify(e),"utf8")}catch{}let a=e.allReplace?R:m;return{name:"vite-plugin-style-to-vw",enforce:"pre",transform(r,y){if(/.vue$/.test(y)){let n="",c="";if(h.test(r)?(n=r.match(h)[0],c=r.match(h)[0]):r.includes("setup")&&(n=r,c=r),a.test(n)){let l=n.match(a);if(l?.length){let u=[];for(let t=0;t<l.length;t++){let o=l[t].replace(p,g=>g.replace(p,w(e.viewportWidth,e.minPixelValue,e.unitPrecision,e.viewportUnit)));u.push(o)}let s=n;for(let t=0;t<l.length;t++)s=s.replace(l[t],`${u[t]}`);r=r.replace(c,s)}}}else if(/\.tsx|\.jsx$/.test(y)){let n=r,c=r;if(a.test(n)){let l=n.match(a);if(l?.length){let u=[];for(let t=0;t<l.length;t++){let o=l[t].replace(p,g=>g.replace(p,w(e.viewportWidth,e.minPixelValue,e.unitPrecision,e.viewportUnit)));u.push(o)}let s=n;for(let t=0;t<l.length;t++)s=s.replace(l[t],`${u[t]}`);r=r.replace(c,s),c=r,n=r}}if(V.test(n)){let l=n.match(V);if(l?.length){let u=[];for(let t=0;t<l.length;t++){let o=l[t].replace(p,g=>g.replace(p,w(e.viewportWidth,e.minPixelValue,e.unitPrecision,e.viewportUnit)));u.push(o)}let s=n;for(let t=0;t<l.length;t++)s=s.replace(l[t],`${u[t]}`);r=r.replace(r,s)}}}return{code:r,map:null}}}}var M=j;if(typeof window<"u")try{b=(await import("./file-47U6KFCE.mjs")).default}catch{}var U=(e,i={})=>{let f=Object.assign({},b);if(i=Object.assign(f,i),typeof e=="number"||typeof Number(e)=="number"&&!isNaN(Number(e))){let a=e.toString().replace(/(\d+)/g,r=>r.replace(/(\d+)/g,w(i.viewportWidth,i.minPixelValue,i.unitPrecision,"")));return typeof e=="number"?Number(a):a}else return e.toString().replace(p,a=>a.replace(p,w(i.viewportWidth,i.minPixelValue,i.unitPrecision,i.viewportUnit)))};export{M as default,U as stylePxToVw};
